<mahApps:MetroWindow
    x:Class="MaloneChan.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:MaloneChan.Views"
    xmlns:vm="clr-namespace:MaloneChan.ViewModels"
    xmlns:dlg="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    dlg:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    TextElement.FontSize="16"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized" Cursor="IBeam"
    >

    <b:Interaction.Triggers>
        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Loaded">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </b:EventTrigger>
        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <b:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </b:EventTrigger>
        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->
    </b:Interaction.Triggers>
    <Window.Resources>
        <v:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu>
            <MenuItem/>
            <MenuItem/>
            <MenuItem/>
        </Menu>
        <mahApps:MetroTabControl Grid.Row="1"
          TabStripPlacement="Top"
          Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
            ItemsSource="{Binding TabPages}" SelectedItem="{Binding SelectedTabPage,Mode=TwoWay}"
            wpf:ColorZoneAssist.Mode="PrimaryLight"
            wpf:NavigationRailAssist.ShowSelectionBackground="True"
            wpf:NavigationRailAssist.SelectionCornerRadius="50"
            HorizontalContentAlignment="Left">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Label}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.Resources>
                <DataTemplate DataType="{x:Type vm:SQLViewModel}">
                    <v:SQLView DataContext="{Binding}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:DatabaseObjectViewModel}">
                    <v:DatabaseObjectView DataContext="{Binding}" />
                </DataTemplate>
                <DataTemplate DataType="{x:Type vm:EFCoreTestingViewModel}">
                    <v:EFCoreTestingView DataContext="{Binding}" />
                </DataTemplate>
            </TabControl.Resources>
            <TabControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add SQL" Command="{Binding AddSQLViewCommand}"/>
                    <MenuItem Header="Add Database" Command="{Binding AddDatabaseObjectViewCommand}"/>
                    <MenuItem Header="Add EFCore" Command="{Binding AddEFCoreTestingViewCommand}"/>
                </ContextMenu>
            </TabControl.ContextMenu>
        </mahApps:MetroTabControl>
    </Grid>
</mahApps:MetroWindow>
